<h1>{{product.title}}</h1>

<p><strong>Description:</strong> {{product.description}}</p>
<p><strong>Price:</strong> ${{product.price}}</p>
<p><strong>Category:</strong> {{product.category}}</p>
<p><strong>Stock:</strong> {{product.stock}}</p>

{{#if product.thumbnails.length}}
    {{#each product.thumbnails}}
        {{#if this}}
            <div class="image-container">
                <img src="{{this}}" alt="Product image" width="200">
            </div>
        {{/if}}
    {{/each}}
{{else}}
    <img src="/img/default-placeholder.webp" alt="No image available" width="200">
{{/if}}

<h2>Add to Cart</h2>
<form id="addToCartForm">
    <label for="quantity">Quantity:</label>
    <input type="number" name="quantity" id="quantity" value="1" min="1" max="{{product.stock}}" required>
    <button type="submit" class="styled-button">Add to Cart</button>
</form>

<h2>Remove from Cart</h2>
<form onsubmit="event.preventDefault(); removeFromCart('{{cartId}}', '{{product._id}}')">
    <button type="submit" class="styled-button">Remove from Cart</button>
</form>

<a href="/products/view" class="styled-button">Back to products</a>

<h2>Upload Product Image</h2>
<form action="/products/{{product._id}}/upload" method="POST" enctype="multipart/form-data">
    <input type="file" name="image" required>
    <button type="submit" class="styled-button">Upload Image</button>
</form>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script>
    document.getElementById("addToCartForm").addEventListener("submit", async function (event) {
            event.preventDefault(); // previene la recarga de la pÃ¡gina

            const cartId = "{{cartId}}";
            const productId = "{{product._id}}";
            const quantity = document.getElementById("quantity").value;

            try {
                const response = await fetch(`/api/carts/${cartId}/products/${productId}`, {
                    method: "POST",
                    headers: { "Content-Type": "application/json" },
                    body: JSON.stringify({ quantity: parseInt(quantity) })
                });

                console.log("Response Status:", response.status);
                const responseData = await response.json(); // intenta obtener el JSON de la respuesta
                console.log("API Response:", responseData); // muestra la respuesta en la consola del navegador

                if (response.ok) {
                    Swal.fire({
                        title: "Success!",
                        text: responseData.message || "Product added to cart successfully!",
                        icon: "success",
                        confirmButtonText: "OK"
                    }).then(() => {
                        window.location.href = `/carts/view/${cartId}`; // redirige al carrito
                    });
                } else {
                    console.error("Fetch Response Error:", responseData);
                    Swal.fire({
                        title: "Error",
                        text: responseData.error || "Could not add product to cart.",
                        icon: "error",
                        confirmButtonText: "OK"
                    });
                }
            } catch (error) {
                console.error("Fetch Error:", error);
                Swal.fire("Error", "Something went wrong.", "error");
            }
    });

    const urlParams = new URLSearchParams(window.location.search);
    if (urlParams.has('success')) {
        Swal.fire({
            title: "Success!",
            text: "Image uploaded successfully!",
            icon: "success",
            confirmButtonText: "OK"
        });
    }

    async function removeFromCart(cartId, productId) {
        try {
            const response = await fetch(`/cart/${cartId}/products/${productId}`, {
                method: "DELETE"
            });
            if (response.ok) {
                Swal.fire({
                    title: "Removed!",
                    text: "Product removed from cart!",
                    icon: "success",
                    confirmButtonText: "OK"
                }).then(() => {
                    window.location.reload();
                });
            } else {
                Swal.fire("Error", "Error removing product.", "error");
            }
        } catch (error) {
            console.error("Error:", error);
        }
    }
</script>
